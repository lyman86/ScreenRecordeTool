name: Test Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Test version (e.g., v1.0.1-test)'
        required: true
        default: 'v1.0.1-test'

jobs:
  test-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create test files
      run: |
        mkdir -p test-artifacts
        echo "Test Windows build" > test-artifacts/ScreenRecorder.exe
        echo "Test macOS build" > test-artifacts/ScreenRecorder.app
        
        # Create test archives
        cd test-artifacts
        zip -r ../ScreenRecorder-Windows.zip ScreenRecorder.exe
        tar -czf ../ScreenRecorder-macOS.tar.gz ScreenRecorder.app
        cd ..
        
        echo "Created test files:"
        ls -la *.zip *.tar.gz
        
    - name: Create test tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a ${{ github.event.inputs.version }} -m "Test release ${{ github.event.inputs.version }}"
        git push origin ${{ github.event.inputs.version }} || echo "Tag already exists"
      continue-on-error: true
        
    - name: Create Test Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: Test Release ${{ github.event.inputs.version }}
        files: |
          ScreenRecorder-Windows.zip
          ScreenRecorder-macOS.tar.gz
        draft: true
        prerelease: true
        generate_release_notes: false
        body: |
          ## 🧪 测试Release ${{ github.event.inputs.version }}
          
          这是一个测试Release，用于验证自动发布流程。
          
          ### 📦 测试文件
          - **Windows**: ScreenRecorder-Windows.zip (测试文件)
          - **macOS**: ScreenRecorder-macOS.tar.gz (测试文件)
          
          ### ⚠️ 注意
          这些是测试文件，不包含实际的应用程序。
          
          ---
          🤖 测试构建 | 构建ID: ${{ github.run_id }}
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
