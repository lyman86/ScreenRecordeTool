name: Release Build

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create resources directory
      run: |
        mkdir -p resources
        
    - name: Build Windows executable
      run: |
        python build_scripts/build_windows.py
        
    - name: Create Windows installer script
      run: |
        echo "Windows build completed"
        dir dist
        
    - name: Upload Windows build
      uses: actions/upload-artifact@v3
      with:
        name: ScreenRecorder-Windows
        path: |
          dist/
          installer.nsi
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        brew install portaudio
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create resources directory
      run: |
        mkdir -p resources
        
    - name: Build macOS application
      run: |
        python build_scripts/build_macos.py
        
    - name: Create DMG (if create-dmg is available)
      run: |
        if command -v create-dmg &> /dev/null; then
          create-dmg \
            --volname "Screen Recorder" \
            --window-pos 200 120 \
            --window-size 600 300 \
            --icon-size 100 \
            --icon "ScreenRecorder.app" 175 120 \
            --hide-extension "ScreenRecorder.app" \
            --app-drop-link 425 120 \
            "ScreenRecorder.dmg" \
            "dist/"
        else
          echo "create-dmg not available, creating tar.gz instead"
          cd dist && tar -czf ../ScreenRecorder-macOS.tar.gz . && cd ..
        fi
        
    - name: Upload macOS build
      uses: actions/upload-artifact@v3
      with:
        name: ScreenRecorder-macOS
        path: |
          dist/
          ScreenRecorder*.dmg
          ScreenRecorder*.tar.gz
        retention-days: 30

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Windows artifacts
      uses: actions/download-artifact@v3
      with:
        name: ScreenRecorder-Windows
        path: ./windows-build/
        
    - name: Download macOS artifacts
      uses: actions/download-artifact@v3
      with:
        name: ScreenRecorder-macOS
        path: ./macos-build/
        
    - name: Create release packages
      run: |
        # Create Windows package
        cd windows-build
        zip -r ../ScreenRecorder-Windows-${{ github.event.inputs.version }}.zip .
        cd ..
        
        # Create macOS package
        cd macos-build
        tar -czf ../ScreenRecorder-macOS-${{ github.event.inputs.version }}.tar.gz .
        cd ..
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: Release ${{ github.event.inputs.version }}
        files: |
          ScreenRecorder-Windows-${{ github.event.inputs.version }}.zip
          ScreenRecorder-macOS-${{ github.event.inputs.version }}.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
