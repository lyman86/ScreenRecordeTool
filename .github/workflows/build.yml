name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']
        exclude:
          # 减少构建矩阵，只在主要版本上构建
          - os: macos-latest
            python-version: '3.9'
          - os: macos-latest
            python-version: '3.10'
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y portaudio19-dev python3-pyaudio xvfb

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install portaudio
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create resources directory
      run: |
        mkdir -p resources

    - name: Run tests (if test files exist)
      run: |
        if [ -f "test_installation.py" ]; then
          python test_installation.py
        fi
      shell: bash
      continue-on-error: true

    - name: Build executable
      run: |
        python scripts/ci_build.py
      continue-on-error: true
        
    - name: Upload Windows artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v3
      with:
        name: ScreenRecorder-Windows-${{ matrix.python-version }}
        path: |
          dist/
          !dist/**/*.pyc
          
    - name: Upload macOS artifact
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v3
      with:
        name: ScreenRecorder-macOS-${{ matrix.python-version }}
        path: |
          dist/
          !dist/**/*.pyc

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create release archives
      run: |
        # 创建Windows发布包
        if [ -d "ScreenRecorder-Windows-3.11" ]; then
          cd ScreenRecorder-Windows-3.11
          zip -r ../ScreenRecorder-Windows.zip .
          cd ..
        fi
        
        # 创建macOS发布包
        if [ -d "ScreenRecorder-macOS-3.11" ]; then
          cd ScreenRecorder-macOS-3.11
          tar -czf ../ScreenRecorder-macOS.tar.gz .
          cd ..
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ScreenRecorder-Windows.zip
          ScreenRecorder-macOS.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
