name: Test Only

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        
    - name: Install basic Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        
    - name: Create resources directory
      run: |
        mkdir -p resources
        
    - name: Test Python environment
      run: |
        python --version
        pip --version
        
    - name: Test basic imports
      run: |
        python -c "import sys; print('Python path:', sys.path)"
        python -c "import os; print('Current directory:', os.getcwd())"
        
    - name: Test project structure
      run: |
        ls -la
        ls -la src/ || echo "src directory not found"
        
    - name: Test config loading (basic)
      run: |
        python -c "
import sys
import os
sys.path.insert(0, 'src')
try:
    from config.settings import AppConfig
    print('✅ Config loaded successfully')
    print('App name:', AppConfig.APP_NAME)
    print('App version:', AppConfig.APP_VERSION)
except Exception as e:
    print('❌ Config loading failed:', e)
    exit(1)
"
      continue-on-error: true
      
    - name: Test installation script
      run: |
        python test_installation.py || echo "Installation test completed with warnings"
      continue-on-error: true
